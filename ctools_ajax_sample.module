<?php

/**
 * @file
 * Sample AJAX functionality so people can see some of the CTools AJAX
 * features in use.
 */

 //--------------
 // Drupal hooks.

 /**
  * Implements hook_menu().
  */
function ctools_ajax_sample_menu() {
  $items['ctools_ajax_sample'] = array(
    'title'           => 'Chaos Tools AJAX Demo',
    'page callback'   => 'ctools_ajax_sample_page',
    'access callback' => TRUE,
    'type'            => MENU_NORMAL_ITEM,
  );

  $items['ctools_ajax_sample/%ctools_js/hello'] = array(
    'title'           => 'Hello World Title from hook_menu',
    'page callback'   => 'ctools_ajax_sample_hello',
    'page arguments'  => array(1),    // maps to %ctools_js which means... ??
    'access callback' => TRUE,
    'type'            => MENU_CALLBACK,
  );

  // I know %node invokes some auto-loading magic, but not sure what %ctools_js does in JS context
  // %ctools_js seems to be something which intelligently either routes to the nojs path or
  // tells you you're in a JS-enabled browser.
  $items['ctools_ajax_sample/%ctools_js/login'] = array(
    'title' => 'Login',
    'page callback'   => 'ctools_ajax_sample_login',
    'page arguments'  => array(1),      // %ctools_js above in menu path
    'access callback' => TRUE,
    'type'            => MENU_CALLBACK,
  );


  $items['ctools_ajax_sample/%ctools_js/login/%'] = array(
    'title'           => 'Post-Login Action',
    'page callback'   => 'ctools_ajax_sample_login_success',
    'page arguments'  => array(1, 3),
    'access callback' => TRUE,
    'type'            => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 *
 * Render some basic output for this module.
 */
function ctools_ajax_sample_theme() {
  return array(
    // Sample theme function
    'ctools_ajax_sample_container' => array(
      'arguments' => array('content' => NULL),
    ),
  );
}


/**
 * Page callback to display links and render a container for AJAX stuff.
 */
function ctools_ajax_sample_page() {
  global $user;

  // Include the CTools tools that we need.
  ctools_include('ajax');
  ctools_include('modal');

  // Add CTools' javascript to the page.
  ctools_modal_add_js();

  // Create our own JavaScript that will be used to theme a modal.
  $sample_style = array(
    'ctools-sample-style' => array(
      'modalSize' => array(
        'type'      => 'fixed',
        'width'     => 500,
        'height'    => 300,
        'addWidth'  => 20,
        'addHeight' => 15,
      ),
      'modalOptions' => array(
        'opacity'          => .5,
        'background-color' => '#000',
      ),
      'animation'  => 'fadeIn',
      'modalTheme' => 'CToolsSampleModal',
      'throbber'   => theme('image', ctools_image_path('ajax-loader-gif', 'ctools_ajax_sample'), t('Loading...'), t('Loading')),
    ),
  );

  drupal_add_js($sample_style, 'setting');

  // Since we have our js, css and images in well-known named directories,
  // CTools makes it easy for us to just use them without worrying about
  // using drupal_get_path() and all that ugliness.
  ctools_add_js('ctools-ajax-sample', 'ctools_ajax_sample');
  ctools_add_css('ctools-ajax-sample', 'ctools_ajax_sample');

  // Create a list of clickable links.
  $links = array();

  // Only show login links to the anonymous user.
  if ($user->uid == 0) {
    $links[] = ctools_modal_text_button(t('Modal Login (default style)'),
               'ctools_ajax_sample/nojs/login', t('Login via modal'));
    // The extra class points to the into in ctools-sample-style which we added to the settings.
    $links[] = ctools_modal_text_button(t('Modal Login (custom style)'),
               'ctools_ajax_sample/nojs/login', t('Login via modal'), 'ctools-modal-ctools-sample-style');
  }

  $links[] = ctools_ajax_text_button(t('Hello world nojs'), "ctools_ajax_sample/nojs/hello", t('Replace text with "hello world"'));

  $output = theme('item_list', $links, t('Actions'));

  // Default function theme_ctools_ajax_sample_container($content) defined below
  $output .= theme('ctools_ajax_sample_container', '<h3>' . t('Initial Content in div id=ctools-sample') . '</h3>');

  // Create a table that we can have data removed via AJAX.
  $header = array(t('Row'), t('Content'), t('Actions'));
  $rows = array();
  for($i = 1; $i < 11; $i++) {
    $rows[] = array(
      'class' => 'ajax-sample-row-' . $i,
      'data'  => array(
        $i,
        md5($i),
        ctools_ajax_text_button('remove', "ctools_ajax_sample/nojs/tablenix/$i", t('Delete this row')),
      ),
    );
  }

  $output .= theme('table', $header, $rows, array('class' => 'ajax-sample-table'));

  return $output;

}

/**
 * Returns a "take it all over" hello world stype request.
 */
function ctools_ajax_sample_hello($js = NULL) {
  $output = '<h1>' . t('Hello World from ctools_ajax_sample_hello() callback') . '</h1>';
  if ($js) {
    ctools_include('ajax');
    $commands = array();
    $commands[] = ctools_ajax_command_html('#ctools-sample', $output);
    ctools_ajax_render($commands);  // this function exits.
  }
  else {
    return $output;
  }
}


/**
 * A modal login callback.
 * This is the menu callback defined by $items['ctools_ajax_sample/%ctools_js/login'] in $items in hook_menu above.
 */
function ctools_ajax_sample_login($js = NULL) {
  // Fall back if $js is not set.
  if (!$js) {
    return drupal_get_form('user_login');
  }

  ctools_include('modal');
  ctools_include('ajax');
  $form_state = array(
    'title'  => t('Login'),
    'ajax'   => TRUE,
  );
  // Note we wrap Drupal's user-login form, so we get all that with no extra work.
  $output = ctools_modal_form_wrapper('user_login', $form_state);
  if (empty($output)) {
    // empty $output signifies success, so we'll use it as our $commands
    // array
    $output = array();
    $inplace = ctools_ajax_text_button(t('remain here'),  'ctools_ajax_sample/nojs/login/inplace', t('Go to your account'));
    $account = ctools_ajax_text_button(t('your account'), 'ctools_ajax_sample/nojs/login/user', t('Go to your account'));
    $output[] = ctools_modal_command_display(t('Login Success'), '<div class="modal-message">Login successful. You can now choose whether to ' . $inplace . ', or go to ' . $account . '</div>');
  }
  ctools_ajax_render($output);
}

/**
 * Post-login processor: Should we go to the user account or stay in place?
 */
function ctools_ajax_sample_login_success($js, $action) {
  if (!$js) {
    // we should never be here out of ajax context
    return MENU_NOT_FOUND;
  }

  ctools_include('ajax');
  $commands = array();
  if ($action == 'inplace') {
    // stay here
    $commands[] = ctools_ajax_command_reload();
  }
  else {
    // bounce bounce
    $commands[] = ctools_ajax_command_redirect('user');
  }
  ctools_ajax_render($commands);
}

// --------------------------------------------------------------------------
// Themes

/**
 * Theme function for main rendered output.
 */
function theme_ctools_ajax_sample_container($content) {
  $output  = '<div id="ctools-sample">';
  $output .= $content;
  $output .= '</div>';
  return $output;
}
